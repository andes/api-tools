version: 2

defaults: &defaults
  docker:
    - image: circleci/node:10
  working_directory: ~/api-tools-builds

jobs:
  clone_and_hash:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-project-metadata-{{ .Branch }}
            - v1-project-metadata-master

      - run:
          name: Initialize project metadata
          command: |
            mkdir -p .project-metadata
            touch .event-bus-hash
            touch .mongoose-plugin-audit-hash
            touch .api-tool-hash
            touch .core-hash
            touch .georeference-hash

      - run:
          name: Hash projects
          command: |
            git log --pretty=format:'%H' -n 1 -- event-bus > .event-bus-hash.new
            git log --pretty=format:'%H' -n 1 -- mongoose-plugin-audit > .mongoose-plugin-audit-hash.new
            git log --pretty=format:'%H' -n 1 -- api-tool > .api-tool-hash.new
            git log --pretty=format:'%H' -n 1 -- core > .core-hash.new
            git log --pretty=format:'%H' -n 1 -- georeference > .georeference-hash.new

      - run:
          name: Determine changed projects
          command: |
            if ! diff .event-bus-hash{,.new} > /dev/null; then
              touch .project-metadata/.event-bus-changed
            fi

            if ! diff .mongoose-plugin-audit-hash{,.new} > /dev/null; then
              touch .project-metadata/.mongoose-plugin-audit-changed
            fi

            if ! diff .api-tool-hash{,.new} > /dev/null; then
              touch .project-metadata/.api-tool-changed
            fi

            if ! diff .core-hash{,.new} > /dev/null; then
              touch .project-metadata/.core-changed
            fi

            if ! diff .reference-hash{,.new} > /dev/null; then
              touch .project-metadata/.georeference-changed
            fi

      - run:
          name: Set current project hashes
          command: |
            mv .event-bus-hash{.new,}
            mv .mongoose-plugin-audit-hash{.new,}
            mv .api-tool-hash{.new,}
            mv .core-hash{.new,}
            mv .georeference-hash{.new,}

      - persist_to_workspace:
          root: .
          paths:
            - .project-metadata
            - node_modules/
            - event-bus/node_modules
            - mongoose-plugin-audit/node_modules
            - api-tool/node_modules
            - core/node_modules
            - georeference/node_modules

      - save_cache:
          key: v1-project-metadata-{{ .Branch }}-{{ epoch }}
          paths:
            - .event-bus-hash
            - .mongoose-plugin-audit-hash
            - .api-tool-hash
            - .query-builder-hash
            - .geofererence-hash

  bootstrap:
    <<: *defaults
    working_directory: ~/api-tools-builds
    steps:
      - checkout: { path: ~/api-tools-builds }
      - attach_workspace: { at: . }
      - run:
          name: Install top-level dependencies
          command: yarn install
      - run:
          name: Bootstrap via Lerna
          command: yarn bootstrap
      - run:
          name: Commit lint
          command: ./node_modules/.bin/commitlint --from origin/master --to ${CIRCLE_SHA1}
      - persist_to_workspace:
          root: .
          paths:
            - node_modules/
            - event-bus/node_modules
            - mongoose-plugin-audit/node_modules
            - api-tool/node_modules
            - core/node_modules
            - georeference/node_modules

  event-bus:
    <<: *defaults
    working_directory: ~/api-tools-builds
    steps:
      - checkout: { path: ~/api-tools-builds }
      - attach_workspace: { at: . }
      - run:
          name: Check whether project changed
          command: |
            if [ -e .project-metadata/.event-bus-changed ]; then
              echo "let's do this"
            else
              circleci step halt
            fi
      - run:
          name: Lint event-bus
          command: yarn run lint --scope=@andes/event-bus

      - run:
          name: Test event-bus
          command: yarn test --scope=@andes/event-bus

  mongoose-plugin-audit:
    <<: *defaults
    working_directory: ~/api-tools-builds
    steps:
      - checkout: { path: ~/api-tools-builds }
      - attach_workspace: { at: . }
      - run:
          name: Check whether project changed
          command: |
            if [ -e .project-metadata/.mongoose-plugin-audit-changed ]; then
              echo "let's do this"
            else
              circleci step halt
            fi
      - run:
          name: Lint mongoose-plugin-audit
          command: yarn run lint --scope=@andes/mongoose-plugin-audit

      - run:
          name: Test mongoose-plugin-audit
          command: yarn test --scope=@andes/mongoose-plugin-audit

  api-tool:
    <<: *defaults
    working_directory: ~/api-tools-builds
    steps:
      - checkout: { path: ~/api-tools-builds }
      - attach_workspace: { at: . }
      - run:
          name: Check whether project changed
          command: |
            if [ -e .project-metadata/.api-tool-changed ]; then
              echo "let's do this"
            else
              circleci step halt
            fi
      - run:
          name: Lint api-tool
          command: yarn run lint --scope=@andes/api-tool

      - run:
          name: Test api-tool
          command: yarn test --scope=@andes/api-tool
  core:
    <<: *defaults
    working_directory: ~/api-tools-builds
    steps:
      - checkout: { path: ~/api-tools-builds }
      - attach_workspace: { at: . }
      - run:
          name: Check whether project changed
          command: |
            if [ -e .project-metadata/.core-changed ]; then
              echo "let's do this"
            else
              circleci step halt
            fi
      - run:
          name: Lint core
          command: yarn run lint --scope=@andes/core

      - run:
          name: Test core
          command: yarn test --scope=@andes/core
  georeference:
    <<: *defaults
    working_directory: ~/api-tools-builds
    steps:
      - checkout: { path: ~/api-tools-builds }
      - attach_workspace: { at: . }
      - run:
          name: Check whether project changed
          command: |
            if [ -e .project-metadata/.georeference-changed ]; then
              echo "let's do this"
            else
              circleci step halt
            fi
      - run:
          name: Lint core
          command: yarn run lint --scope=@andes/georeference

      - run:
          name: Test core
          command: yarn test --scope=@andes/georeference
workflows:
  version: 2

  build_test_deploy:
    jobs:
      - clone_and_hash
      - bootstrap:
          requires:
            - clone_and_hash

      # Shared Packages
      - event-bus:
          requires:
            - clone_and_hash
            - bootstrap
      - mongoose-plugin-audit:
          requires:
            - clone_and_hash
            - bootstrap
      - api-tool:
          requires:
            - clone_and_hash
            - bootstrap
      - core:
          requires:
            - clone_and_hash
            - bootstrap
      - georeference:
          requires:
            - clone_and_hash
            - bootstrap
